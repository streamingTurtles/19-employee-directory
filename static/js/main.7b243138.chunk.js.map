{"version":3,"sources":["components/aheader.js","components/empBoxSearch.js","api.js","components/empReturnData.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["Aheader","className","id","EmpBoxSearch","props","onChange","searchBarInputMgmt","value","search","name","type","placeholder","axios","get","EmpReturnData","state","orderByName","results","event","target","searchName","toLowerCase","setState","orderFirstName","firstNameEmp","sort","a","b","first","reverse","orderLastName","lastNameEmp","last","API","then","res","data","console","log","catch","err","this","onClick","map","item","includes","src","picture","thumbnail","alt","phone","email","DateFormat","dob","date","login","uuid","React","Component","Footer","year","Date","getFullYear","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b243138.chunk.js","sourcesContent":["import React from 'react';\nimport \"../App.css\"\n\nfunction Aheader() {\n    return (\n    <div>\n      <div className=\"jumbotron jumbotron-fluid\" id=\"jumboTron\">\n        <div className=\"container\">\n          <h1 className=\"display-6\"><i className=\"fas fa-user-friends\"></i> <b>Employee Directory</b></h1>\n          <p className=\"lead\">Search employees using First or Last Name</p>\n        </div>\n      </div>\n    </div>\n    );\n  }\n\nexport default Aheader;","import React from \"react\";\n\nconst EmpBoxSearch = function (props){\n\n    return(\n        <form>\n        <div className=\"form-group search-widget\">\n          <div className=\"input-group mb-3\">\n                <input\n                    onChange={props.searchBarInputMgmt}\n                    value={props.search}\n                    name=\"search\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder='Employee Directory Search'\n                    id=\"search\"\n                />\n          </div>\n        </div>\n      </form>\n      );\n}\n\n\nexport default EmpBoxSearch;\n","import axios from \"axios\";\nconst url = 'https://randomuser.me/api/?results=10';\n\n// \nexport default {\n    ApiSearch: function () {\n        return axios.get(url)\n\n    }\n}\n\n// NOTES:\n// Employee data content from generic source link\n// https://randomuser.me/\n\n// FYI - Resources for review\n// https://www.digitalocean.com/community/tutorials/react-axios-react\n// https://www.educative.io/edpresso/how-to-make-an-axios-get-request\n// https://kapeli.com/cheat_sheets/Axios.docset/Contents/Resources/Documents/index","import React from \"react\";\nimport API from \"../api.js\"\nimport Search from \"./empBoxSearch\" \n\n// use dateFormat to clean the json date info returned in json\n// https://www.npmjs.com/package/dateformat\nimport DateFormat from 'dateformat'\n\n\n// create class component based on api protocol for anticipated data\nclass EmpReturnData extends React.Component {\n\n    state = {\n        orderByName: \"\",\n        results: [],\n        search: \"\"\n    }\n\n\n    // make Api call from https://randomuser.me/\n    // https://linguinecode.com/post/understanding-react-componentdidmount\n    componentDidMount() {\n        API.ApiSearch()\n        .then(res => {\n            this.setState({ results: res.data.results })\n            console.log(this.state.results)\n        }).catch(err => console.log(err))\n    }\n\n\n\n     // Manage search bar input\n     // https://www.pluralsight.com/guides/handling-multiple-inputs-with-single-onchange-handler-react\n    searchBarInputMgmt = event => {\n        if (event.target.name === \"search\") {\n            const searchName = event.target.value.toLowerCase();\n            this.setState({ search: searchName })\n        }\n    }\n\n\n\n\n    // Alphabetize in ascending or descening order by first name\n    orderFirstName = () => {\n        const firstNameEmp = this.state.results.sort((a, b) => {\n        if (b.name.first > a.name.first) {\n            return -1\n        }\n        if (a.name.first > b.name.first) {\n            return 1\n        }\n        return 0;\n        });\n        if (this.state.orderByName === \"makeDescending\") {\n            firstNameEmp.reverse();\n            this.setState({ orderByName: \"makeAscending\" });\n          } else {\n            this.setState({ orderByName: \"makeDescending\" });\n          }\n          this.setState({ results: firstNameEmp })\n    }\n\n\n    // Alphabetize in ascending or descening order by last name\n    orderLastName = () => {\n        const lastNameEmp = this.state.results.sort((a, b) => {\n        if (b.name.last > a.name.last) {\n            return -1\n        }\n        if (a.name.last > b.name.last) {\n            return 1\n        }\n        return 0;\n        });\n        if (this.state.orderByName === \"makeDescending\") {\n            lastNameEmp.reverse();\n            this.setState({ orderByName: \"makeAscending\" });\n        } else {\n            this.setState({ orderByName: \"makeDescending\" });\n        }\n        this.setState({ results: lastNameEmp })\n    }\n\n\n    // Render the employee data\n    render() {\n        return (\n        <div>\n            <Search searchBarInputMgmt={this.searchBarInputMgmt}\n            search={this.state.search} />\n            {/* using bootstrap classes for returned data */}\n            <div className=\"table-responsive\">\n            <table className=\"table table-striped table-resposive text-center table-hover\">\n                <thead>\n                <tr>\n                    <th>Image</th>\n                    <th>First Name <span className=\"downArrow\" onClick={this.orderFirstName}></span></th>\n                    <th>Last Name <span className=\"downArrow\" onClick={this.orderLastName}></span></th>\n                    <th>Phone</th>\n                    <th>Email</th>\n                    <th>DOB </th>\n                </tr>\n                </thead>\n\n                { // first names\n                this.state.results && this.state.results.map(item =>\n                    item.name.first.toLowerCase().includes(this.state.search) ?\n                    <tbody key={item.login.uuid}>\n                        <tr>\n                        <td><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                        <td>{item.name.first}</td>\n                        <td>{item.name.last}</td>\n                        <td>{item.phone}</td>\n                        <td>{item.email}</td>\n                        <td>{DateFormat(item.dob.date, \"paddedShortDate\")}</td>  \n                        </tr>\n                    </tbody>\n\n                    :\n                    // last names\n                    item.name.last.toLowerCase().includes(this.state.search) ?\n                        <tbody key={item.login.uuid}>\n                        <tr>\n                        <td ><img src={item.picture.thumbnail} className=\"rounded-circle\" alt=\"thumbnail\" /></td>\n                            <td>{item.name.first}</td>\n                            <td>{item.name.last}</td>\n                            <td>{item.phone} </td>\n                            <td>{item.email}</td>\n                            <td>{DateFormat(item.dob.date, \"paddedShortDate\")}</td>  \n                        </tr>\n                        </tbody>\n                        :\n                        null\n                )}\n            </table>\n            </div>\n        </div>\n        )\n    }\n\n\n}    \n  \nexport default EmpReturnData;","import React from \"react\";\nimport \"../App.css\"\n\nfunction Footer() {\n  const year = new Date().getFullYear()\n   return (\n    <div className=\"footer\" >\n      <div className=\"footer-copyright text-center py-3\">    \n        <div className=\"container\">\n           <hr></hr> \n           <h6 className=\"display-6\">{year} - Employee Directory</h6>\n           <a href=\"https://github.com/streamingTurtles/19-employee-directory\">gitHub Repo</a> \n           <br></br> \n           <a href=\"https://streamingturtles.github.io/19-employee-directory/\">gitHub hosted app</a>     \n           <hr></hr>   \n        </div>\n      </div>\n   </div>\n   )\n  }\n\nexport default Footer;","// import logo from './logo.svg';\n// import './App.css';\nimport React from 'react'; \nimport Aheader from \"./components/aheader\";\nimport EmpBoxSearch from \"./components/empBoxSearch\"; // not needed here\nimport EmpReturnData from \"./components/empReturnData\"; \nimport Footer from './components/footer';\n\n\nfunction App() {\n  return (\n    // removed flexbox - to possibly incorporate after testing layout of table\n    <div>\n      <Aheader/>\n      {/* <EmpBoxSearch/> */}\n      <EmpReturnData/>\n      <Footer/>\n    </div>\n    )\n  }  \n\n\n\nexport default App;\n\n\n//     REMOVED DEFAULT FROM  create-react-app \n//     added components\n//\n//     Boiler plate code from create-react-app   \n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}